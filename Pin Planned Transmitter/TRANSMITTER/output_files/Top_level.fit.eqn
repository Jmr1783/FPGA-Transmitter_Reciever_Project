-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, the Altera Quartus Prime License Agreement,
-- the Altera MegaCore Function License Agreement, or other 
-- applicable license agreement, including, without limitation, 
-- that your use is for the sole purpose of programming logic 
-- devices manufactured by Altera and sold by Altera or its 
-- authorized distributors.  Please refer to the applicable 
-- agreement for further details.
--D1_count[20] is Delay:Port_Mapping_Delay|count[20] at FF_X36_Y1_N31
--register power-up is low

D1_count[20] = DFFEAS(D1L2, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[4] is Delay:Port_Mapping_Delay|count[4] at FF_X36_Y2_N44
--register power-up is low

D1_count[4] = DFFEAS(D1L6, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[3] is Delay:Port_Mapping_Delay|count[3] at FF_X36_Y2_N41
--register power-up is low

D1_count[3] = DFFEAS(D1L10, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[2] is Delay:Port_Mapping_Delay|count[2] at FF_X36_Y2_N38
--register power-up is low

D1_count[2] = DFFEAS(D1L14, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[1] is Delay:Port_Mapping_Delay|count[1] at FF_X36_Y2_N35
--register power-up is low

D1_count[1] = DFFEAS(D1L18, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[10] is Delay:Port_Mapping_Delay|count[10] at FF_X36_Y1_N1
--register power-up is low

D1_count[10] = DFFEAS(D1L22, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[9] is Delay:Port_Mapping_Delay|count[9] at FF_X36_Y2_N59
--register power-up is low

D1_count[9] = DFFEAS(D1L26, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[8] is Delay:Port_Mapping_Delay|count[8] at FF_X36_Y2_N56
--register power-up is low

D1_count[8] = DFFEAS(D1L30, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[7] is Delay:Port_Mapping_Delay|count[7] at FF_X36_Y2_N52
--register power-up is low

D1_count[7] = DFFEAS(D1L34, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[6] is Delay:Port_Mapping_Delay|count[6] at FF_X36_Y2_N50
--register power-up is low

D1_count[6] = DFFEAS(D1L38, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[5] is Delay:Port_Mapping_Delay|count[5] at FF_X36_Y2_N47
--register power-up is low

D1_count[5] = DFFEAS(D1L42, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[19] is Delay:Port_Mapping_Delay|count[19] at FF_X36_Y1_N29
--register power-up is low

D1_count[19] = DFFEAS(D1L46, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[15] is Delay:Port_Mapping_Delay|count[15] at FF_X36_Y1_N17
--register power-up is low

D1_count[15] = DFFEAS(D1L50, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[14] is Delay:Port_Mapping_Delay|count[14] at FF_X36_Y1_N14
--register power-up is low

D1_count[14] = DFFEAS(D1L54, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[13] is Delay:Port_Mapping_Delay|count[13] at FF_X36_Y1_N11
--register power-up is low

D1_count[13] = DFFEAS(D1L58, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[12] is Delay:Port_Mapping_Delay|count[12] at FF_X36_Y1_N7
--register power-up is low

D1_count[12] = DFFEAS(D1L62, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[11] is Delay:Port_Mapping_Delay|count[11] at FF_X36_Y1_N5
--register power-up is low

D1_count[11] = DFFEAS(D1L66, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[16] is Delay:Port_Mapping_Delay|count[16] at FF_X36_Y1_N20
--register power-up is low

D1_count[16] = DFFEAS(D1L70, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[18] is Delay:Port_Mapping_Delay|count[18] at FF_X36_Y1_N26
--register power-up is low

D1_count[18] = DFFEAS(D1L74, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[17] is Delay:Port_Mapping_Delay|count[17] at FF_X36_Y1_N23
--register power-up is low

D1_count[17] = DFFEAS(D1L78, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[0] is Delay:Port_Mapping_Delay|count[0] at FF_X36_Y2_N32
--register power-up is low

D1_count[0] = DFFEAS(D1L82, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[27] is Delay:Port_Mapping_Delay|count[27] at FF_X36_Y1_N52
--register power-up is low

D1_count[27] = DFFEAS(D1L86, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[26] is Delay:Port_Mapping_Delay|count[26] at FF_X36_Y1_N50
--register power-up is low

D1_count[26] = DFFEAS(D1L90, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[25] is Delay:Port_Mapping_Delay|count[25] at FF_X36_Y1_N46
--register power-up is low

D1_count[25] = DFFEAS(D1L94, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[24] is Delay:Port_Mapping_Delay|count[24] at FF_X36_Y1_N43
--register power-up is low

D1_count[24] = DFFEAS(D1L98, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[23] is Delay:Port_Mapping_Delay|count[23] at FF_X36_Y1_N40
--register power-up is low

D1_count[23] = DFFEAS(D1L102, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[22] is Delay:Port_Mapping_Delay|count[22] at FF_X36_Y1_N37
--register power-up is low

D1_count[22] = DFFEAS(D1L106, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1_count[21] is Delay:Port_Mapping_Delay|count[21] at FF_X36_Y1_N34
--register power-up is low

D1_count[21] = DFFEAS(D1L110, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L2 is Delay:Port_Mapping_Delay|Add0~1 at LABCELL_X36_Y1_N30
D1L2_adder_eqn = ( D1_count[20] ) + ( GND ) + ( D1L47 );
D1L2 = SUM(D1L2_adder_eqn);

--D1L3 is Delay:Port_Mapping_Delay|Add0~2 at LABCELL_X36_Y1_N30
D1L3_adder_eqn = ( D1_count[20] ) + ( GND ) + ( D1L47 );
D1L3 = CARRY(D1L3_adder_eqn);


--D1L6 is Delay:Port_Mapping_Delay|Add0~5 at LABCELL_X36_Y2_N42
D1L6_adder_eqn = ( D1L120Q ) + ( GND ) + ( D1L11 );
D1L6 = SUM(D1L6_adder_eqn);

--D1L7 is Delay:Port_Mapping_Delay|Add0~6 at LABCELL_X36_Y2_N42
D1L7_adder_eqn = ( D1L120Q ) + ( GND ) + ( D1L11 );
D1L7 = CARRY(D1L7_adder_eqn);


--D1L10 is Delay:Port_Mapping_Delay|Add0~9 at LABCELL_X36_Y2_N39
D1L10_adder_eqn = ( D1_count[3] ) + ( GND ) + ( D1L15 );
D1L10 = SUM(D1L10_adder_eqn);

--D1L11 is Delay:Port_Mapping_Delay|Add0~10 at LABCELL_X36_Y2_N39
D1L11_adder_eqn = ( D1_count[3] ) + ( GND ) + ( D1L15 );
D1L11 = CARRY(D1L11_adder_eqn);


--D1L14 is Delay:Port_Mapping_Delay|Add0~13 at LABCELL_X36_Y2_N36
D1L14_adder_eqn = ( D1_count[2] ) + ( GND ) + ( D1L19 );
D1L14 = SUM(D1L14_adder_eqn);

--D1L15 is Delay:Port_Mapping_Delay|Add0~14 at LABCELL_X36_Y2_N36
D1L15_adder_eqn = ( D1_count[2] ) + ( GND ) + ( D1L19 );
D1L15 = CARRY(D1L15_adder_eqn);


--D1L18 is Delay:Port_Mapping_Delay|Add0~17 at LABCELL_X36_Y2_N33
D1L18_adder_eqn = ( D1_count[1] ) + ( GND ) + ( D1L83 );
D1L18 = SUM(D1L18_adder_eqn);

--D1L19 is Delay:Port_Mapping_Delay|Add0~18 at LABCELL_X36_Y2_N33
D1L19_adder_eqn = ( D1_count[1] ) + ( GND ) + ( D1L83 );
D1L19 = CARRY(D1L19_adder_eqn);


--D1L22 is Delay:Port_Mapping_Delay|Add0~21 at LABCELL_X36_Y1_N0
D1L22_adder_eqn = ( D1L127Q ) + ( GND ) + ( D1L27 );
D1L22 = SUM(D1L22_adder_eqn);

--D1L23 is Delay:Port_Mapping_Delay|Add0~22 at LABCELL_X36_Y1_N0
D1L23_adder_eqn = ( D1L127Q ) + ( GND ) + ( D1L27 );
D1L23 = CARRY(D1L23_adder_eqn);


--D1L26 is Delay:Port_Mapping_Delay|Add0~25 at LABCELL_X36_Y2_N57
D1L26_adder_eqn = ( D1_count[9] ) + ( GND ) + ( D1L31 );
D1L26 = SUM(D1L26_adder_eqn);

--D1L27 is Delay:Port_Mapping_Delay|Add0~26 at LABCELL_X36_Y2_N57
D1L27_adder_eqn = ( D1_count[9] ) + ( GND ) + ( D1L31 );
D1L27 = CARRY(D1L27_adder_eqn);


--D1L30 is Delay:Port_Mapping_Delay|Add0~29 at LABCELL_X36_Y2_N54
D1L30_adder_eqn = ( D1_count[8] ) + ( GND ) + ( D1L35 );
D1L30 = SUM(D1L30_adder_eqn);

--D1L31 is Delay:Port_Mapping_Delay|Add0~30 at LABCELL_X36_Y2_N54
D1L31_adder_eqn = ( D1_count[8] ) + ( GND ) + ( D1L35 );
D1L31 = CARRY(D1L31_adder_eqn);


--D1L34 is Delay:Port_Mapping_Delay|Add0~33 at LABCELL_X36_Y2_N51
D1L34_adder_eqn = ( D1_count[7] ) + ( GND ) + ( D1L39 );
D1L34 = SUM(D1L34_adder_eqn);

--D1L35 is Delay:Port_Mapping_Delay|Add0~34 at LABCELL_X36_Y2_N51
D1L35_adder_eqn = ( D1_count[7] ) + ( GND ) + ( D1L39 );
D1L35 = CARRY(D1L35_adder_eqn);


--D1L38 is Delay:Port_Mapping_Delay|Add0~37 at LABCELL_X36_Y2_N48
D1L38_adder_eqn = ( D1_count[6] ) + ( GND ) + ( D1L43 );
D1L38 = SUM(D1L38_adder_eqn);

--D1L39 is Delay:Port_Mapping_Delay|Add0~38 at LABCELL_X36_Y2_N48
D1L39_adder_eqn = ( D1_count[6] ) + ( GND ) + ( D1L43 );
D1L39 = CARRY(D1L39_adder_eqn);


--D1L42 is Delay:Port_Mapping_Delay|Add0~41 at LABCELL_X36_Y2_N45
D1L42_adder_eqn = ( D1_count[5] ) + ( GND ) + ( D1L7 );
D1L42 = SUM(D1L42_adder_eqn);

--D1L43 is Delay:Port_Mapping_Delay|Add0~42 at LABCELL_X36_Y2_N45
D1L43_adder_eqn = ( D1_count[5] ) + ( GND ) + ( D1L7 );
D1L43 = CARRY(D1L43_adder_eqn);


--D1L46 is Delay:Port_Mapping_Delay|Add0~45 at LABCELL_X36_Y1_N27
D1L46_adder_eqn = ( D1L138Q ) + ( GND ) + ( D1L75 );
D1L46 = SUM(D1L46_adder_eqn);

--D1L47 is Delay:Port_Mapping_Delay|Add0~46 at LABCELL_X36_Y1_N27
D1L47_adder_eqn = ( D1L138Q ) + ( GND ) + ( D1L75 );
D1L47 = CARRY(D1L47_adder_eqn);


--D1L50 is Delay:Port_Mapping_Delay|Add0~49 at LABCELL_X36_Y1_N15
D1L50_adder_eqn = ( D1_count[15] ) + ( GND ) + ( D1L55 );
D1L50 = SUM(D1L50_adder_eqn);

--D1L51 is Delay:Port_Mapping_Delay|Add0~50 at LABCELL_X36_Y1_N15
D1L51_adder_eqn = ( D1_count[15] ) + ( GND ) + ( D1L55 );
D1L51 = CARRY(D1L51_adder_eqn);


--D1L54 is Delay:Port_Mapping_Delay|Add0~53 at LABCELL_X36_Y1_N12
D1L54_adder_eqn = ( D1_count[14] ) + ( GND ) + ( D1L59 );
D1L54 = SUM(D1L54_adder_eqn);

--D1L55 is Delay:Port_Mapping_Delay|Add0~54 at LABCELL_X36_Y1_N12
D1L55_adder_eqn = ( D1_count[14] ) + ( GND ) + ( D1L59 );
D1L55 = CARRY(D1L55_adder_eqn);


--D1L58 is Delay:Port_Mapping_Delay|Add0~57 at LABCELL_X36_Y1_N9
D1L58_adder_eqn = ( D1_count[13] ) + ( GND ) + ( D1L63 );
D1L58 = SUM(D1L58_adder_eqn);

--D1L59 is Delay:Port_Mapping_Delay|Add0~58 at LABCELL_X36_Y1_N9
D1L59_adder_eqn = ( D1_count[13] ) + ( GND ) + ( D1L63 );
D1L59 = CARRY(D1L59_adder_eqn);


--D1L62 is Delay:Port_Mapping_Delay|Add0~61 at LABCELL_X36_Y1_N6
D1L62_adder_eqn = ( D1_count[12] ) + ( GND ) + ( D1L67 );
D1L62 = SUM(D1L62_adder_eqn);

--D1L63 is Delay:Port_Mapping_Delay|Add0~62 at LABCELL_X36_Y1_N6
D1L63_adder_eqn = ( D1_count[12] ) + ( GND ) + ( D1L67 );
D1L63 = CARRY(D1L63_adder_eqn);


--D1L66 is Delay:Port_Mapping_Delay|Add0~65 at LABCELL_X36_Y1_N3
D1L66_adder_eqn = ( D1_count[11] ) + ( GND ) + ( D1L23 );
D1L66 = SUM(D1L66_adder_eqn);

--D1L67 is Delay:Port_Mapping_Delay|Add0~66 at LABCELL_X36_Y1_N3
D1L67_adder_eqn = ( D1_count[11] ) + ( GND ) + ( D1L23 );
D1L67 = CARRY(D1L67_adder_eqn);


--D1L70 is Delay:Port_Mapping_Delay|Add0~69 at LABCELL_X36_Y1_N18
D1L70_adder_eqn = ( D1_count[16] ) + ( GND ) + ( D1L51 );
D1L70 = SUM(D1L70_adder_eqn);

--D1L71 is Delay:Port_Mapping_Delay|Add0~70 at LABCELL_X36_Y1_N18
D1L71_adder_eqn = ( D1_count[16] ) + ( GND ) + ( D1L51 );
D1L71 = CARRY(D1L71_adder_eqn);


--D1L74 is Delay:Port_Mapping_Delay|Add0~73 at LABCELL_X36_Y1_N24
D1L74_adder_eqn = ( D1_count[18] ) + ( GND ) + ( D1L79 );
D1L74 = SUM(D1L74_adder_eqn);

--D1L75 is Delay:Port_Mapping_Delay|Add0~74 at LABCELL_X36_Y1_N24
D1L75_adder_eqn = ( D1_count[18] ) + ( GND ) + ( D1L79 );
D1L75 = CARRY(D1L75_adder_eqn);


--D1L78 is Delay:Port_Mapping_Delay|Add0~77 at LABCELL_X36_Y1_N21
D1L78_adder_eqn = ( D1_count[17] ) + ( GND ) + ( D1L71 );
D1L78 = SUM(D1L78_adder_eqn);

--D1L79 is Delay:Port_Mapping_Delay|Add0~78 at LABCELL_X36_Y1_N21
D1L79_adder_eqn = ( D1_count[17] ) + ( GND ) + ( D1L71 );
D1L79 = CARRY(D1L79_adder_eqn);


--D1L82 is Delay:Port_Mapping_Delay|Add0~81 at LABCELL_X36_Y2_N30
D1L82_adder_eqn = ( D1L115Q ) + ( VCC ) + ( !VCC );
D1L82 = SUM(D1L82_adder_eqn);

--D1L83 is Delay:Port_Mapping_Delay|Add0~82 at LABCELL_X36_Y2_N30
D1L83_adder_eqn = ( D1L115Q ) + ( VCC ) + ( !VCC );
D1L83 = CARRY(D1L83_adder_eqn);


--D1L86 is Delay:Port_Mapping_Delay|Add0~85 at LABCELL_X36_Y1_N51
D1L86_adder_eqn = ( D1_count[27] ) + ( GND ) + ( D1L91 );
D1L86 = SUM(D1L86_adder_eqn);


--D1L90 is Delay:Port_Mapping_Delay|Add0~89 at LABCELL_X36_Y1_N48
D1L90_adder_eqn = ( D1_count[26] ) + ( GND ) + ( D1L95 );
D1L90 = SUM(D1L90_adder_eqn);

--D1L91 is Delay:Port_Mapping_Delay|Add0~90 at LABCELL_X36_Y1_N48
D1L91_adder_eqn = ( D1_count[26] ) + ( GND ) + ( D1L95 );
D1L91 = CARRY(D1L91_adder_eqn);


--D1L94 is Delay:Port_Mapping_Delay|Add0~93 at LABCELL_X36_Y1_N45
D1L94_adder_eqn = ( D1L147Q ) + ( GND ) + ( D1L99 );
D1L94 = SUM(D1L94_adder_eqn);

--D1L95 is Delay:Port_Mapping_Delay|Add0~94 at LABCELL_X36_Y1_N45
D1L95_adder_eqn = ( D1L147Q ) + ( GND ) + ( D1L99 );
D1L95 = CARRY(D1L95_adder_eqn);


--D1L98 is Delay:Port_Mapping_Delay|Add0~97 at LABCELL_X36_Y1_N42
D1L98_adder_eqn = ( D1_count[24] ) + ( GND ) + ( D1L103 );
D1L98 = SUM(D1L98_adder_eqn);

--D1L99 is Delay:Port_Mapping_Delay|Add0~98 at LABCELL_X36_Y1_N42
D1L99_adder_eqn = ( D1_count[24] ) + ( GND ) + ( D1L103 );
D1L99 = CARRY(D1L99_adder_eqn);


--D1L102 is Delay:Port_Mapping_Delay|Add0~101 at LABCELL_X36_Y1_N39
D1L102_adder_eqn = ( D1_count[23] ) + ( GND ) + ( D1L107 );
D1L102 = SUM(D1L102_adder_eqn);

--D1L103 is Delay:Port_Mapping_Delay|Add0~102 at LABCELL_X36_Y1_N39
D1L103_adder_eqn = ( D1_count[23] ) + ( GND ) + ( D1L107 );
D1L103 = CARRY(D1L103_adder_eqn);


--D1L106 is Delay:Port_Mapping_Delay|Add0~105 at LABCELL_X36_Y1_N36
D1L106_adder_eqn = ( D1L143Q ) + ( GND ) + ( D1L111 );
D1L106 = SUM(D1L106_adder_eqn);

--D1L107 is Delay:Port_Mapping_Delay|Add0~106 at LABCELL_X36_Y1_N36
D1L107_adder_eqn = ( D1L143Q ) + ( GND ) + ( D1L111 );
D1L107 = CARRY(D1L107_adder_eqn);


--D1L110 is Delay:Port_Mapping_Delay|Add0~109 at LABCELL_X36_Y1_N33
D1L110_adder_eqn = ( D1L141Q ) + ( GND ) + ( D1L3 );
D1L110 = SUM(D1L110_adder_eqn);

--D1L111 is Delay:Port_Mapping_Delay|Add0~110 at LABCELL_X36_Y1_N33
D1L111_adder_eqn = ( D1L141Q ) + ( GND ) + ( D1L3 );
D1L111 = CARRY(D1L111_adder_eqn);


--K1_current_state.ELS is FSM:Port_Mapping_statemachine|current_state.ELS at FF_X37_Y2_N41
--register power-up is low

K1_current_state.ELS = DFFEAS(K1L7, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--J1_Shift_Reg[7] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[7] at FF_X39_Y2_N26
--register power-up is low

J1_Shift_Reg[7] = DFFEAS(J1L12, GLOBAL(A1L4), A1L52,  , J1L11,  ,  ,  ,  );


--K1_current_state.Transmit is FSM:Port_Mapping_statemachine|current_state.Transmit at FF_X36_Y2_N13
--register power-up is low

K1_current_state.Transmit = DFFEAS(K1L8, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--H1L1 is Mux:Port_Mapping_Mux|Mux0~0 at LABCELL_X39_Y2_N57
H1L1 = ( J1_Shift_Reg[7] & ( !K1_current_state.ELS ) ) # ( !J1_Shift_Reg[7] & ( (!K1_current_state.ELS & !K1_current_state.Transmit) ) );


--F1_Data_out[0] is storage:Port_Mapping_FlipFlop1|Data_out[0] at FF_X40_Y2_N5
--register power-up is low

F1_Data_out[0] = DFFEAS(F1L3, GLOBAL(A1L4),  ,  , !A1L40,  ,  ,  ,  );


--F1_Data_out[1] is storage:Port_Mapping_FlipFlop1|Data_out[1] at FF_X40_Y2_N20
--register power-up is low

F1_Data_out[1] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L40, A1L57,  ,  , VCC);


--F1_Data_out[2] is storage:Port_Mapping_FlipFlop1|Data_out[2] at FF_X40_Y2_N23
--register power-up is low

F1_Data_out[2] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L40, A1L59,  ,  , VCC);


--F1_Data_out[3] is storage:Port_Mapping_FlipFlop1|Data_out[3] at FF_X40_Y2_N2
--register power-up is low

F1_Data_out[3] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L40, A1L61,  ,  , VCC);


--C1L7 is BCD2SSD:Display0|Mux6~0 at LABCELL_X40_Y2_N39
C1L7 = ( F1_Data_out[1] & ( (F1_Data_out[3] & (F1_Data_out[0] & !F1_Data_out[2])) ) ) # ( !F1_Data_out[1] & ( (!F1_Data_out[3] & (!F1_Data_out[0] $ (!F1_Data_out[2]))) # (F1_Data_out[3] & (F1_Data_out[0] & F1_Data_out[2])) ) );


--C1L6 is BCD2SSD:Display0|Mux5~0 at LABCELL_X40_Y2_N54
C1L6 = ( F1_Data_out[1] & ( (!F1_Data_out[0] & (F1_Data_out[2])) # (F1_Data_out[0] & ((F1_Data_out[3]))) ) ) # ( !F1_Data_out[1] & ( (F1_Data_out[2] & (!F1_Data_out[0] $ (!F1_Data_out[3]))) ) );


--C1L5 is BCD2SSD:Display0|Mux4~0 at LABCELL_X40_Y2_N21
C1L5 = ( F1_Data_out[2] & ( F1_Data_out[1] & ( F1_Data_out[3] ) ) ) # ( !F1_Data_out[2] & ( F1_Data_out[1] & ( (!F1_Data_out[0] & !F1_Data_out[3]) ) ) ) # ( F1_Data_out[2] & ( !F1_Data_out[1] & ( (!F1_Data_out[0] & F1_Data_out[3]) ) ) );


--C1L4 is BCD2SSD:Display0|Mux3~0 at LABCELL_X40_Y2_N27
C1L4 = ( F1_Data_out[1] & ( (!F1_Data_out[0] & (F1_Data_out[3] & !F1_Data_out[2])) # (F1_Data_out[0] & ((F1_Data_out[2]))) ) ) # ( !F1_Data_out[1] & ( (!F1_Data_out[0] & (!F1_Data_out[3] & F1_Data_out[2])) # (F1_Data_out[0] & ((!F1_Data_out[2]))) ) );


--C1L3 is BCD2SSD:Display0|Mux2~0 at LABCELL_X40_Y2_N45
C1L3 = ( F1_Data_out[1] & ( (!F1_Data_out[3] & F1_Data_out[0]) ) ) # ( !F1_Data_out[1] & ( (!F1_Data_out[2] & ((F1_Data_out[0]))) # (F1_Data_out[2] & (!F1_Data_out[3])) ) );


--C1L2 is BCD2SSD:Display0|Mux1~0 at LABCELL_X40_Y2_N12
C1L2 = ( F1_Data_out[1] & ( (!F1_Data_out[3] & ((!F1_Data_out[2]) # (F1_Data_out[0]))) ) ) # ( !F1_Data_out[1] & ( (F1_Data_out[0] & (!F1_Data_out[2] $ (F1_Data_out[3]))) ) );


--C1L1 is BCD2SSD:Display0|Mux0~0 at LABCELL_X40_Y2_N9
C1L1 = ( F1_Data_out[1] & ( ((!F1_Data_out[0]) # (!F1_Data_out[2])) # (F1_Data_out[3]) ) ) # ( !F1_Data_out[1] & ( (!F1_Data_out[3] & ((F1_Data_out[2]))) # (F1_Data_out[3] & ((!F1_Data_out[2]) # (F1_Data_out[0]))) ) );


--F1_Data_out[4] is storage:Port_Mapping_FlipFlop1|Data_out[4] at FF_X40_Y2_N50
--register power-up is low

F1_Data_out[4] = DFFEAS(F1L8, GLOBAL(A1L4),  ,  , !A1L40,  ,  ,  ,  );


--F1_Data_out[5] is storage:Port_Mapping_FlipFlop1|Data_out[5] at FF_X40_Y2_N53
--register power-up is low

F1_Data_out[5] = DFFEAS(F1L10, GLOBAL(A1L4),  ,  , !A1L40,  ,  ,  ,  );


--F1_Data_out[6] is storage:Port_Mapping_FlipFlop1|Data_out[6] at FF_X40_Y2_N35
--register power-up is low

F1_Data_out[6] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L40, A1L67,  ,  , VCC);


--F1_Data_out[7] is storage:Port_Mapping_FlipFlop1|Data_out[7] at FF_X40_Y2_N32
--register power-up is low

F1_Data_out[7] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L40, A1L69,  ,  , VCC);


--C2L7 is BCD2SSD:Display1|Mux6~0 at LABCELL_X40_Y2_N6
C2L7 = ( F1_Data_out[4] & ( (!F1_Data_out[7] & (!F1_Data_out[5] & !F1_Data_out[6])) # (F1_Data_out[7] & (!F1_Data_out[5] $ (!F1_Data_out[6]))) ) ) # ( !F1_Data_out[4] & ( (!F1_Data_out[7] & (!F1_Data_out[5] & F1_Data_out[6])) ) );


--C2L6 is BCD2SSD:Display1|Mux5~0 at LABCELL_X40_Y2_N24
C2L6 = ( F1_Data_out[4] & ( (!F1_Data_out[7] & (!F1_Data_out[5] & F1_Data_out[6])) # (F1_Data_out[7] & (F1_Data_out[5])) ) ) # ( !F1_Data_out[4] & ( (F1_Data_out[6] & ((F1_Data_out[5]) # (F1_Data_out[7]))) ) );


--C2L5 is BCD2SSD:Display1|Mux4~0 at LABCELL_X40_Y2_N36
C2L5 = ( F1_Data_out[4] & ( (F1_Data_out[7] & (F1_Data_out[5] & F1_Data_out[6])) ) ) # ( !F1_Data_out[4] & ( (!F1_Data_out[7] & (F1_Data_out[5] & !F1_Data_out[6])) # (F1_Data_out[7] & ((F1_Data_out[6]))) ) );


--C2L4 is BCD2SSD:Display1|Mux3~0 at LABCELL_X40_Y2_N57
C2L4 = ( F1_Data_out[5] & ( (!F1_Data_out[4] & (F1_Data_out[7] & !F1_Data_out[6])) # (F1_Data_out[4] & ((F1_Data_out[6]))) ) ) # ( !F1_Data_out[5] & ( (!F1_Data_out[4] & (!F1_Data_out[7] & F1_Data_out[6])) # (F1_Data_out[4] & ((!F1_Data_out[6]))) ) );


--C2L3 is BCD2SSD:Display1|Mux2~0 at LABCELL_X40_Y2_N42
C2L3 = ( F1_Data_out[4] & ( (!F1_Data_out[7]) # ((!F1_Data_out[5] & !F1_Data_out[6])) ) ) # ( !F1_Data_out[4] & ( (!F1_Data_out[7] & (!F1_Data_out[5] & F1_Data_out[6])) ) );


--C2L2 is BCD2SSD:Display1|Mux1~0 at LABCELL_X40_Y2_N33
C2L2 = ( F1_Data_out[6] & ( F1_Data_out[5] & ( (F1_Data_out[4] & !F1_Data_out[7]) ) ) ) # ( !F1_Data_out[6] & ( F1_Data_out[5] & ( !F1_Data_out[7] ) ) ) # ( F1_Data_out[6] & ( !F1_Data_out[5] & ( (F1_Data_out[4] & F1_Data_out[7]) ) ) ) # ( !F1_Data_out[6] & ( !F1_Data_out[5] & ( (F1_Data_out[4] & !F1_Data_out[7]) ) ) );


--C2L1 is BCD2SSD:Display1|Mux0~0 at LABCELL_X40_Y2_N15
C2L1 = ( F1_Data_out[5] & ( (!F1_Data_out[4]) # ((!F1_Data_out[6]) # (F1_Data_out[7])) ) ) # ( !F1_Data_out[5] & ( (!F1_Data_out[7] & ((F1_Data_out[6]))) # (F1_Data_out[7] & ((!F1_Data_out[6]) # (F1_Data_out[4]))) ) );


--D1_flag is Delay:Port_Mapping_Delay|flag at FF_X37_Y2_N43
--register power-up is low

D1_flag = DFFEAS(D1L157, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--K1_current_state.Key_IN is FSM:Port_Mapping_statemachine|current_state.Key_IN at FF_X37_Y2_N28
--register power-up is low

K1_current_state.Key_IN = DFFEAS(K1L6, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--K1L7 is FSM:Port_Mapping_statemachine|Selector2~0 at MLABCELL_X37_Y2_N39
K1L7 = ( K1_current_state.Key_IN & ( (!A1L42) # ((!D1L158Q & K1_current_state.ELS)) ) ) # ( !K1_current_state.Key_IN & ( (!D1L158Q & K1_current_state.ELS) ) );


--E1_Data_out[7] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[7] at FF_X39_Y2_N53
--register power-up is low

E1_Data_out[7] = DFFEAS(E1L10, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1_Shift_Reg[6] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[6] at FF_X39_Y2_N28
--register power-up is low

J1_Shift_Reg[6] = DFFEAS(J1L13, GLOBAL(A1L4), A1L52,  , J1L11,  ,  ,  ,  );


--J1L12 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg~0 at LABCELL_X39_Y2_N24
J1L12 = ( J1_Shift_Reg[6] & ( (!K1_current_state.ELS) # (E1_Data_out[7]) ) ) # ( !J1_Shift_Reg[6] & ( (K1_current_state.ELS & E1_Data_out[7]) ) );


--J1L11 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[7]~1 at MLABCELL_X37_Y2_N57
J1L11 = ( K1_current_state.Transmit & ( (D1L158Q & !K1_current_state.ELS) ) ) # ( !K1_current_state.Transmit & ( (D1L158Q & K1_current_state.ELS) ) );


--G1_CNT is MOD8:Port_Mapping_MOD|CNT at FF_X37_Y2_N46
--register power-up is low

G1_CNT = DFFEAS(G1L2, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--K1L8 is FSM:Port_Mapping_statemachine|Selector3~0 at LABCELL_X36_Y2_N12
K1L8 = ( K1_current_state.ELS & ( ((!G1L3Q & K1_current_state.Transmit)) # (D1_flag) ) ) # ( !K1_current_state.ELS & ( (!G1L3Q & K1_current_state.Transmit) ) );


--D1L150 is Delay:Port_Mapping_Delay|Equal0~0 at LABCELL_X36_Y2_N6
D1L150 = ( D1_count[4] & ( (!D1_count[1] & (!D1_count[3] & !D1_count[2])) ) );


--D1L151 is Delay:Port_Mapping_Delay|Equal0~1 at LABCELL_X36_Y2_N3
D1L151 = ( !D1_count[7] & ( !D1_count[10] & ( (!D1_count[8] & (D1_count[5] & (!D1_count[9] & !D1_count[6]))) ) ) );


--D1L152 is Delay:Port_Mapping_Delay|Equal0~2 at LABCELL_X36_Y1_N54
D1L152 = ( !D1_count[12] & ( !D1_count[15] & ( (!D1_count[11] & (!D1_count[13] & (!D1_count[19] & !D1_count[14]))) ) ) );


--D1L153 is Delay:Port_Mapping_Delay|Equal0~3 at LABCELL_X36_Y2_N18
D1L153 = ( !D1_count[26] & ( !D1_count[27] & ( (!D1L135Q & (D1_count[0] & (!D1_count[16] & !D1_count[18]))) ) ) );


--D1L154 is Delay:Port_Mapping_Delay|Equal0~4 at MLABCELL_X37_Y1_N0
D1L154 = ( !D1_count[24] & ( !D1_count[23] & ( (!D1_count[22] & (!D1_count[25] & !D1_count[21])) ) ) );


--D1L155 is Delay:Port_Mapping_Delay|Equal0~5 at LABCELL_X36_Y2_N24
D1L155 = ( D1L154 & ( D1L153 & ( (D1L151 & (D1L150 & (!D1_count[20] & D1L152))) ) ) );


--D1L157 is Delay:Port_Mapping_Delay|flag~0 at MLABCELL_X37_Y2_N42
D1L157 = ( D1L155 & ( ((D1_flag) # (K1_current_state.ELS)) # (K1_current_state.Transmit) ) ) # ( !D1L155 & ( (!K1_current_state.Transmit & (!K1_current_state.ELS & D1_flag)) ) );


--K1_current_state.Data is FSM:Port_Mapping_statemachine|current_state.Data at FF_X37_Y2_N25
--register power-up is low

K1_current_state.Data = DFFEAS(K1L5, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--K1L6 is FSM:Port_Mapping_statemachine|Selector1~0 at MLABCELL_X37_Y2_N27
K1L6 = ( K1_current_state.Data & ( (A1L42 & K1_current_state.Key_IN) ) ) # ( !K1_current_state.Data & ( (!A1L40) # ((A1L42 & K1_current_state.Key_IN)) ) );


--F2_Data_out[7] is storage:Port_Mapping_FlipFlop2|Data_out[7] at FF_X35_Y2_N16
--register power-up is low

F2_Data_out[7] = DFFEAS(F2L10, GLOBAL(A1L4),  ,  , !A1L42,  ,  ,  ,  );


--E1L10 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~0 at LABCELL_X39_Y2_N51
E1L10 = ( !F2_Data_out[7] & ( F1_Data_out[7] ) ) # ( F2_Data_out[7] & ( !F1_Data_out[7] ) );


--E1_Data_out[6] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[6] at FF_X39_Y2_N22
--register power-up is low

E1_Data_out[6] = DFFEAS(E1L11, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1_Shift_Reg[5] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[5] at FF_X39_Y2_N56
--register power-up is low

J1_Shift_Reg[5] = DFFEAS(J1L14, GLOBAL(A1L4), A1L52,  , J1L11,  ,  ,  ,  );


--J1L13 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg~2 at LABCELL_X39_Y2_N27
J1L13 = ( E1_Data_out[6] & ( (J1_Shift_Reg[5]) # (K1_current_state.ELS) ) ) # ( !E1_Data_out[6] & ( (!K1_current_state.ELS & J1_Shift_Reg[5]) ) );


--G1_counting[2] is MOD8:Port_Mapping_MOD|counting[2] at FF_X37_Y2_N38
--register power-up is low

G1_counting[2] = DFFEAS(G1L10, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--G1_counting[1] is MOD8:Port_Mapping_MOD|counting[1] at FF_X37_Y2_N53
--register power-up is low

G1_counting[1] = DFFEAS(G1L8, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--G1_counting[0] is MOD8:Port_Mapping_MOD|counting[0] at FF_X35_Y2_N43
--register power-up is low

G1_counting[0] = DFFEAS(G1L6, GLOBAL(A1L4), A1L52,  , G1L11,  ,  ,  ,  );


--G1L2 is MOD8:Port_Mapping_MOD|CNT~0 at MLABCELL_X37_Y2_N45
G1L2 = ( G1_counting[1] & ( (K1_current_state.Transmit & (G1_counting[0] & (D1L158Q & G1_counting[2]))) ) );


--K1L9 is FSM:Port_Mapping_statemachine|WideNor0~0 at LABCELL_X36_Y2_N9
K1L9 = ( K1_current_state.ELS ) # ( !K1_current_state.ELS & ( K1_current_state.Transmit ) );


--K1L5 is FSM:Port_Mapping_statemachine|Selector0~0 at MLABCELL_X37_Y2_N24
K1L5 = ( G1_CNT & ( (!K1_current_state.Transmit & ((!A1L40) # (K1_current_state.Data))) ) ) # ( !G1_CNT & ( (!A1L40) # (K1_current_state.Data) ) );


--F2_Data_out[6] is storage:Port_Mapping_FlipFlop2|Data_out[6] at FF_X36_Y2_N1
--register power-up is low

F2_Data_out[6] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L42, A1L67,  ,  , VCC);


--E1L11 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~1 at LABCELL_X39_Y2_N21
E1L11 = ( F1_Data_out[6] & ( !F2_Data_out[6] ) ) # ( !F1_Data_out[6] & ( F2_Data_out[6] ) );


--E1_Data_out[5] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[5] at FF_X39_Y2_N40
--register power-up is low

E1_Data_out[5] = DFFEAS(E1L12, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1_Shift_Reg[4] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[4] at FF_X37_Y2_N34
--register power-up is low

J1_Shift_Reg[4] = DFFEAS(J1L15, GLOBAL(A1L4), A1L52,  , J1L11,  ,  ,  ,  );


--J1L14 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg~3 at LABCELL_X39_Y2_N54
J1L14 = ( E1_Data_out[5] & ( (J1_Shift_Reg[4]) # (K1_current_state.ELS) ) ) # ( !E1_Data_out[5] & ( (!K1_current_state.ELS & J1_Shift_Reg[4]) ) );


--G1L10 is MOD8:Port_Mapping_MOD|counting[2]~0 at MLABCELL_X37_Y2_N36
G1L10 = ( K1_current_state.Transmit & ( !G1_counting[2] $ (((!D1L158Q) # ((!G1_counting[0]) # (!G1_counting[1])))) ) ) # ( !K1_current_state.Transmit & ( G1_counting[2] ) );


--G1L8 is MOD8:Port_Mapping_MOD|counting[1]~1 at MLABCELL_X37_Y2_N51
G1L8 = ( G1_counting[1] & ( K1_current_state.Transmit & ( (!G1_counting[0]) # (!D1L158Q) ) ) ) # ( !G1_counting[1] & ( K1_current_state.Transmit & ( (G1_counting[0] & D1L158Q) ) ) ) # ( G1_counting[1] & ( !K1_current_state.Transmit ) );


--G1L11 is MOD8:Port_Mapping_MOD|Modulous8~0 at LABCELL_X36_Y2_N15
G1L11 = ( D1_flag & ( K1_current_state.Transmit ) );


--F2_Data_out[5] is storage:Port_Mapping_FlipFlop2|Data_out[5] at FF_X36_Y2_N26
--register power-up is low

F2_Data_out[5] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L42, A1L65,  ,  , VCC);


--E1L12 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~2 at LABCELL_X39_Y2_N39
E1L12 = ( !F2_Data_out[5] & ( F1_Data_out[5] ) ) # ( F2_Data_out[5] & ( !F1_Data_out[5] ) );


--E1_Data_out[4] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[4] at FF_X37_Y2_N1
--register power-up is low

E1_Data_out[4] = DFFEAS(E1L13, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1_Shift_Reg[3] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[3] at FF_X37_Y2_N31
--register power-up is low

J1_Shift_Reg[3] = DFFEAS(J1L16, GLOBAL(A1L4), A1L52,  , J1L11,  ,  ,  ,  );


--J1L15 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg~4 at MLABCELL_X37_Y2_N33
J1L15 = ( J1_Shift_Reg[3] & ( (!K1_current_state.ELS) # (E1_Data_out[4]) ) ) # ( !J1_Shift_Reg[3] & ( (K1_current_state.ELS & E1_Data_out[4]) ) );


--F2_Data_out[4] is storage:Port_Mapping_FlipFlop2|Data_out[4] at FF_X36_Y2_N11
--register power-up is low

F2_Data_out[4] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L42, A1L63,  ,  , VCC);


--E1L13 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~3 at MLABCELL_X37_Y2_N0
E1L13 = ( !F1_Data_out[4] & ( F2_Data_out[4] ) ) # ( F1_Data_out[4] & ( !F2_Data_out[4] ) );


--E1_Data_out[3] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[3] at FF_X37_Y2_N10
--register power-up is low

E1_Data_out[3] = DFFEAS(E1L14, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1_Shift_Reg[2] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[2] at FF_X37_Y2_N17
--register power-up is low

J1_Shift_Reg[2] = DFFEAS(J1L17, GLOBAL(A1L4), A1L52,  , J1L11,  ,  ,  ,  );


--J1L16 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg~5 at MLABCELL_X37_Y2_N30
J1L16 = ( J1_Shift_Reg[2] & ( (!K1_current_state.ELS) # (E1_Data_out[3]) ) ) # ( !J1_Shift_Reg[2] & ( (K1_current_state.ELS & E1_Data_out[3]) ) );


--F2_Data_out[3] is storage:Port_Mapping_FlipFlop2|Data_out[3] at FF_X36_Y2_N19
--register power-up is low

F2_Data_out[3] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L42, A1L61,  ,  , VCC);


--E1L14 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~4 at MLABCELL_X37_Y2_N9
E1L14 = ( F2_Data_out[3] & ( !F1_Data_out[3] ) ) # ( !F2_Data_out[3] & ( F1_Data_out[3] ) );


--E1_Data_out[2] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[2] at FF_X37_Y2_N8
--register power-up is low

E1_Data_out[2] = DFFEAS(E1L15, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1_Shift_Reg[1] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[1] at FF_X37_Y2_N13
--register power-up is low

J1_Shift_Reg[1] = DFFEAS(J1L18, GLOBAL(A1L4), A1L52,  , J1L11,  ,  ,  ,  );


--J1L17 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg~6 at MLABCELL_X37_Y2_N15
J1L17 = ( J1_Shift_Reg[1] & ( (!K1_current_state.ELS) # (E1_Data_out[2]) ) ) # ( !J1_Shift_Reg[1] & ( (K1_current_state.ELS & E1_Data_out[2]) ) );


--F2_Data_out[2] is storage:Port_Mapping_FlipFlop2|Data_out[2] at FF_X36_Y2_N8
--register power-up is low

F2_Data_out[2] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L42, A1L59,  ,  , VCC);


--E1L15 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~5 at MLABCELL_X37_Y2_N6
E1L15 = ( F2_Data_out[2] & ( !F1_Data_out[2] ) ) # ( !F2_Data_out[2] & ( F1_Data_out[2] ) );


--E1_Data_out[1] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[1] at FF_X37_Y2_N22
--register power-up is low

E1_Data_out[1] = DFFEAS(E1L16, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1_Shift_Reg[0] is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[0] at FF_X36_Y2_N17
--register power-up is low

J1_Shift_Reg[0] = DFFEAS( , GLOBAL(A1L4), A1L52,  ,  , J1L3,  ,  , VCC);


--J1L18 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg~7 at MLABCELL_X37_Y2_N12
J1L18 = ( E1_Data_out[1] & ( (J1_Shift_Reg[0]) # (K1_current_state.ELS) ) ) # ( !E1_Data_out[1] & ( (!K1_current_state.ELS & J1_Shift_Reg[0]) ) );


--F2_Data_out[1] is storage:Port_Mapping_FlipFlop2|Data_out[1] at FF_X36_Y2_N22
--register power-up is low

F2_Data_out[1] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L42, A1L57,  ,  , VCC);


--E1L16 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~6 at MLABCELL_X37_Y2_N21
E1L16 = ( F2_Data_out[1] & ( !F1_Data_out[1] ) ) # ( !F2_Data_out[1] & ( F1_Data_out[1] ) );


--E1_Data_out[0] is Encrypt_Decrypt:Port_Mapping_ED|Data_out[0] at FF_X37_Y2_N20
--register power-up is low

E1_Data_out[0] = DFFEAS(E1L17, GLOBAL(A1L4),  ,  , K1_current_state.ELS,  ,  ,  ,  );


--J1L3 is Shift_Reg:Port_Mapping_Shifter|Shift_Reg[0]~8 at MLABCELL_X37_Y2_N54
J1L3 = ( K1_current_state.ELS & ( (!D1L158Q & ((J1_Shift_Reg[0]))) # (D1L158Q & (E1_Data_out[0])) ) ) # ( !K1_current_state.ELS & ( J1_Shift_Reg[0] ) );


--F2_Data_out[0] is storage:Port_Mapping_FlipFlop2|Data_out[0] at FF_X36_Y2_N28
--register power-up is low

F2_Data_out[0] = DFFEAS( , GLOBAL(A1L4),  ,  , !A1L42, A1L55,  ,  , VCC);


--E1L17 is Encrypt_Decrypt:Port_Mapping_ED|Data_out~7 at MLABCELL_X37_Y2_N18
E1L17 = !F1_Data_out[0] $ (!F2_Data_out[0]);


--G1L6 is MOD8:Port_Mapping_MOD|counting[0]~2 at LABCELL_X35_Y2_N42
G1L6 = ( !G1_counting[0] );


--A1L8 is GPIO~output at IOOBUF_X54_Y18_N45
A1L8 = OUTPUT_BUFFER.O(.I(H1L1), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--GPIO is GPIO at PIN_N16
GPIO = OUTPUT();


--A1L11 is HEX0[0]~output at IOOBUF_X52_Y0_N53
A1L11 = OUTPUT_BUFFER.O(.I(C1L7), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[0] is HEX0[0] at PIN_U21
HEX0[0] = OUTPUT();


--A1L13 is HEX0[1]~output at IOOBUF_X51_Y0_N36
A1L13 = OUTPUT_BUFFER.O(.I(C1L6), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[1] is HEX0[1] at PIN_V21
HEX0[1] = OUTPUT();


--A1L15 is HEX0[2]~output at IOOBUF_X48_Y0_N76
A1L15 = OUTPUT_BUFFER.O(.I(C1L5), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[2] is HEX0[2] at PIN_W22
HEX0[2] = OUTPUT();


--A1L17 is HEX0[3]~output at IOOBUF_X50_Y0_N36
A1L17 = OUTPUT_BUFFER.O(.I(C1L4), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[3] is HEX0[3] at PIN_W21
HEX0[3] = OUTPUT();


--A1L19 is HEX0[4]~output at IOOBUF_X48_Y0_N93
A1L19 = OUTPUT_BUFFER.O(.I(C1L3), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[4] is HEX0[4] at PIN_Y22
HEX0[4] = OUTPUT();


--A1L21 is HEX0[5]~output at IOOBUF_X50_Y0_N53
A1L21 = OUTPUT_BUFFER.O(.I(C1L2), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[5] is HEX0[5] at PIN_Y21
HEX0[5] = OUTPUT();


--A1L23 is HEX0[6]~output at IOOBUF_X46_Y0_N36
A1L23 = OUTPUT_BUFFER.O(.I(!C1L1), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX0[6] is HEX0[6] at PIN_AA22
HEX0[6] = OUTPUT();


--A1L26 is HEX1[0]~output at IOOBUF_X44_Y0_N36
A1L26 = OUTPUT_BUFFER.O(.I(C2L7), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[0] is HEX1[0] at PIN_AA20
HEX1[0] = OUTPUT();


--A1L28 is HEX1[1]~output at IOOBUF_X40_Y0_N93
A1L28 = OUTPUT_BUFFER.O(.I(C2L6), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[1] is HEX1[1] at PIN_AB20
HEX1[1] = OUTPUT();


--A1L30 is HEX1[2]~output at IOOBUF_X44_Y0_N53
A1L30 = OUTPUT_BUFFER.O(.I(C2L5), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[2] is HEX1[2] at PIN_AA19
HEX1[2] = OUTPUT();


--A1L32 is HEX1[3]~output at IOOBUF_X43_Y0_N36
A1L32 = OUTPUT_BUFFER.O(.I(C2L4), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[3] is HEX1[3] at PIN_AA18
HEX1[3] = OUTPUT();


--A1L34 is HEX1[4]~output at IOOBUF_X38_Y0_N36
A1L34 = OUTPUT_BUFFER.O(.I(C2L3), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[4] is HEX1[4] at PIN_AB18
HEX1[4] = OUTPUT();


--A1L36 is HEX1[5]~output at IOOBUF_X43_Y0_N53
A1L36 = OUTPUT_BUFFER.O(.I(C2L2), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[5] is HEX1[5] at PIN_AA17
HEX1[5] = OUTPUT();


--A1L38 is HEX1[6]~output at IOOBUF_X51_Y0_N53
A1L38 = OUTPUT_BUFFER.O(.I(!C2L1), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--HEX1[6] is HEX1[6] at PIN_U22
HEX1[6] = OUTPUT();


--A1L42 is Key2~input at IOIBUF_X14_Y0_N1
A1L42 = INPUT_BUFFER(.I(Key2), );


--Key2 is Key2 at PIN_M7
Key2 = INPUT();


--A1L3 is clk~input at IOIBUF_X22_Y0_N1
A1L3 = INPUT_BUFFER(.I(clk), );


--clk is clk at PIN_M9
clk = INPUT();


--A1L52 is reset_n~input at IOIBUF_X14_Y0_N18
A1L52 = INPUT_BUFFER(.I(reset_n), );


--reset_n is reset_n at PIN_M6
reset_n = INPUT();


--A1L55 is Switches[0]~input at IOIBUF_X33_Y0_N41
A1L55 = INPUT_BUFFER(.I(Switches[0]), );


--Switches[0] is Switches[0] at PIN_U13
Switches[0] = INPUT();


--A1L40 is Key1~input at IOIBUF_X11_Y0_N35
A1L40 = INPUT_BUFFER(.I(Key1), );


--Key1 is Key1 at PIN_W9
Key1 = INPUT();


--A1L57 is Switches[1]~input at IOIBUF_X33_Y0_N58
A1L57 = INPUT_BUFFER(.I(Switches[1]), );


--Switches[1] is Switches[1] at PIN_V13
Switches[1] = INPUT();


--A1L59 is Switches[2]~input at IOIBUF_X34_Y0_N1
A1L59 = INPUT_BUFFER(.I(Switches[2]), );


--Switches[2] is Switches[2] at PIN_T13
Switches[2] = INPUT();


--A1L61 is Switches[3]~input at IOIBUF_X34_Y0_N18
A1L61 = INPUT_BUFFER(.I(Switches[3]), );


--Switches[3] is Switches[3] at PIN_T12
Switches[3] = INPUT();


--A1L63 is Switches[4]~input at IOIBUF_X36_Y0_N35
A1L63 = INPUT_BUFFER(.I(Switches[4]), );


--Switches[4] is Switches[4] at PIN_AA15
Switches[4] = INPUT();


--A1L65 is Switches[5]~input at IOIBUF_X36_Y0_N52
A1L65 = INPUT_BUFFER(.I(Switches[5]), );


--Switches[5] is Switches[5] at PIN_AB15
Switches[5] = INPUT();


--A1L67 is Switches[6]~input at IOIBUF_X34_Y0_N52
A1L67 = INPUT_BUFFER(.I(Switches[6]), );


--Switches[6] is Switches[6] at PIN_AA14
Switches[6] = INPUT();


--A1L69 is Switches[7]~input at IOIBUF_X34_Y0_N35
A1L69 = INPUT_BUFFER(.I(Switches[7]), );


--Switches[7] is Switches[7] at PIN_AA13
Switches[7] = INPUT();



--A1L4 is clk~inputCLKENA0 at CLKCTRL_G6
A1L4 = cyclonev_clkena(.INCLK = A1L3) WITH (clock_type = "Global Clock", ena_register_mode = "always enabled");


--F1L3 is storage:Port_Mapping_FlipFlop1|Data_out[0]~feeder at LABCELL_X40_Y2_N3
F1L3 = ( A1L55 );


--F1L8 is storage:Port_Mapping_FlipFlop1|Data_out[4]~feeder at LABCELL_X40_Y2_N48
F1L8 = ( A1L63 );


--F1L10 is storage:Port_Mapping_FlipFlop1|Data_out[5]~feeder at LABCELL_X40_Y2_N51
F1L10 = ( A1L65 );


--F2L10 is storage:Port_Mapping_FlipFlop2|Data_out[7]~feeder at LABCELL_X35_Y2_N15
F2L10 = ( A1L69 );


--D1L120Q is Delay:Port_Mapping_Delay|count[4]~DUPLICATE at FF_X36_Y2_N43
--register power-up is low

D1L120Q = DFFEAS(D1L6, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L127Q is Delay:Port_Mapping_Delay|count[10]~DUPLICATE at FF_X36_Y1_N2
--register power-up is low

D1L127Q = DFFEAS(D1L22, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L138Q is Delay:Port_Mapping_Delay|count[19]~DUPLICATE at FF_X36_Y1_N28
--register power-up is low

D1L138Q = DFFEAS(D1L46, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L135Q is Delay:Port_Mapping_Delay|count[17]~DUPLICATE at FF_X36_Y1_N22
--register power-up is low

D1L135Q = DFFEAS(D1L78, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L115Q is Delay:Port_Mapping_Delay|count[0]~DUPLICATE at FF_X36_Y2_N31
--register power-up is low

D1L115Q = DFFEAS(D1L82, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L147Q is Delay:Port_Mapping_Delay|count[25]~DUPLICATE at FF_X36_Y1_N47
--register power-up is low

D1L147Q = DFFEAS(D1L94, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L143Q is Delay:Port_Mapping_Delay|count[22]~DUPLICATE at FF_X36_Y1_N38
--register power-up is low

D1L143Q = DFFEAS(D1L106, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L141Q is Delay:Port_Mapping_Delay|count[21]~DUPLICATE at FF_X36_Y1_N35
--register power-up is low

D1L141Q = DFFEAS(D1L110, GLOBAL(A1L4), A1L52,  , K1L9,  ,  , D1L155,  );


--D1L158Q is Delay:Port_Mapping_Delay|flag~DUPLICATE at FF_X37_Y2_N44
--register power-up is low

D1L158Q = DFFEAS(D1L157, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


--G1L3Q is MOD8:Port_Mapping_MOD|CNT~DUPLICATE at FF_X37_Y2_N47
--register power-up is low

G1L3Q = DFFEAS(G1L2, GLOBAL(A1L4), A1L52,  ,  ,  ,  ,  ,  );


